/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFullWorkflowRequestWorkflowUserFi
 */
public class OASFullWorkflowRequestWorkflowUserFi implements OAS.MappedProperties {
    /**
     * Field type.
     * @return fieldTypeField
     */
    public Double fieldTypeField { get; set; }

    /**
     * The font family of the fields text.
     * @return fontFamilyField
     */
    public String fontFamilyField { get; set; }

    /**
     * The font size of the fields text.
     * @return fontSizeField
     */
    public Double fontSizeField { get; set; }

    /**
     * The users in the group\'s user number.
     * @return groupUserNumberField
     */
    public Double groupUserNumberField { get; set; }

    /**
     * Field height.
     * @return heightField
     */
    public String heightField { get; set; }

    /**
     * Is the field visible.
     * @return isInvisibleField
     */
    public Boolean isInvisibleField { get; set; }

    /**
     * Field page number.
     * @return pageNumberField
     */
    public Double pageNumberField { get; set; }

    /**
     * Field tag name.
     * @return tagNameField
     */
    public String tagNameField { get; set; }

    /**
     * Field value.
     * @return valueField
     */
    public String valueField { get; set; }

    /**
     * Field width.
     * @return widthField
     */
    public String widthField { get; set; }

    /**
     * The fields x-coordinates.
     * @return xcoordinateField
     */
    public String xcoordinateField { get; set; }

    /**
     * The fields x-coordinates offset.
     * @return xoffsetField
     */
    public Double xoffsetField { get; set; }

    /**
     * The fields y-coordinates.
     * @return ycoordinateField
     */
    public String ycoordinateField { get; set; }

    /**
     * The fields y-coordinates offset.
     * @return yoffsetField
     */
    public Double yoffsetField { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'FieldTypeField' => 'fieldTypeField',
        'FontFamilyField' => 'fontFamilyField',
        'FontSizeField' => 'fontSizeField',
        'GroupUserNumberField' => 'groupUserNumberField',
        'HeightField' => 'heightField',
        'IsInvisibleField' => 'isInvisibleField',
        'PageNumberField' => 'pageNumberField',
        'TagNameField' => 'tagNameField',
        'ValueField' => 'valueField',
        'WidthField' => 'widthField',
        'XCoordinateField' => 'xcoordinateField',
        'XOffsetField' => 'xoffsetField',
        'YCoordinateField' => 'ycoordinateField',
        'YOffsetField' => 'yoffsetField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASFullWorkflowRequestWorkflowUserFi getExample() {
        OASFullWorkflowRequestWorkflowUserFi fullWorkflowRequestWorkflowUserFieldsField = new OASFullWorkflowRequestWorkflowUserFi();
          fullWorkflowRequestWorkflowUserFieldsField.fieldTypeField = 7;
          fullWorkflowRequestWorkflowUserFieldsField.fontFamilyField = 'Arial';
          fullWorkflowRequestWorkflowUserFieldsField.fontSizeField = 15;
          fullWorkflowRequestWorkflowUserFieldsField.groupUserNumberField = 5;
          fullWorkflowRequestWorkflowUserFieldsField.heightField = '15';
          fullWorkflowRequestWorkflowUserFieldsField.isInvisibleField = true;
          fullWorkflowRequestWorkflowUserFieldsField.pageNumberField = 2;
          fullWorkflowRequestWorkflowUserFieldsField.tagNameField = '';
          fullWorkflowRequestWorkflowUserFieldsField.valueField = '';
          fullWorkflowRequestWorkflowUserFieldsField.widthField = '25';
          fullWorkflowRequestWorkflowUserFieldsField.xcoordinateField = '60';
          fullWorkflowRequestWorkflowUserFieldsField.xoffsetField = 15;
          fullWorkflowRequestWorkflowUserFieldsField.ycoordinateField = '150';
          fullWorkflowRequestWorkflowUserFieldsField.yoffsetField = 20;
        return fullWorkflowRequestWorkflowUserFieldsField;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFullWorkflowRequestWorkflowUserFi) {           
            OASFullWorkflowRequestWorkflowUserFi fullWorkflowRequestWorkflowUserFieldsField = (OASFullWorkflowRequestWorkflowUserFi) obj;
            return this.fieldTypeField == fullWorkflowRequestWorkflowUserFieldsField.fieldTypeField
                && this.fontFamilyField == fullWorkflowRequestWorkflowUserFieldsField.fontFamilyField
                && this.fontSizeField == fullWorkflowRequestWorkflowUserFieldsField.fontSizeField
                && this.groupUserNumberField == fullWorkflowRequestWorkflowUserFieldsField.groupUserNumberField
                && this.heightField == fullWorkflowRequestWorkflowUserFieldsField.heightField
                && this.isInvisibleField == fullWorkflowRequestWorkflowUserFieldsField.isInvisibleField
                && this.pageNumberField == fullWorkflowRequestWorkflowUserFieldsField.pageNumberField
                && this.tagNameField == fullWorkflowRequestWorkflowUserFieldsField.tagNameField
                && this.valueField == fullWorkflowRequestWorkflowUserFieldsField.valueField
                && this.widthField == fullWorkflowRequestWorkflowUserFieldsField.widthField
                && this.xcoordinateField == fullWorkflowRequestWorkflowUserFieldsField.xcoordinateField
                && this.xoffsetField == fullWorkflowRequestWorkflowUserFieldsField.xoffsetField
                && this.ycoordinateField == fullWorkflowRequestWorkflowUserFieldsField.ycoordinateField
                && this.yoffsetField == fullWorkflowRequestWorkflowUserFieldsField.yoffsetField;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (fieldTypeField == null ? 0 : System.hashCode(fieldTypeField));
        hashCode = (17 * hashCode) + (fontFamilyField == null ? 0 : System.hashCode(fontFamilyField));
        hashCode = (17 * hashCode) + (fontSizeField == null ? 0 : System.hashCode(fontSizeField));
        hashCode = (17 * hashCode) + (groupUserNumberField == null ? 0 : System.hashCode(groupUserNumberField));
        hashCode = (17 * hashCode) + (heightField == null ? 0 : System.hashCode(heightField));
        hashCode = (17 * hashCode) + (isInvisibleField == null ? 0 : System.hashCode(isInvisibleField));
        hashCode = (17 * hashCode) + (pageNumberField == null ? 0 : System.hashCode(pageNumberField));
        hashCode = (17 * hashCode) + (tagNameField == null ? 0 : System.hashCode(tagNameField));
        hashCode = (17 * hashCode) + (valueField == null ? 0 : System.hashCode(valueField));
        hashCode = (17 * hashCode) + (widthField == null ? 0 : System.hashCode(widthField));
        hashCode = (17 * hashCode) + (xcoordinateField == null ? 0 : System.hashCode(xcoordinateField));
        hashCode = (17 * hashCode) + (xoffsetField == null ? 0 : System.hashCode(xoffsetField));
        hashCode = (17 * hashCode) + (ycoordinateField == null ? 0 : System.hashCode(ycoordinateField));
        hashCode = (17 * hashCode) + (yoffsetField == null ? 0 : System.hashCode(yoffsetField));
        return hashCode;
    }
}

