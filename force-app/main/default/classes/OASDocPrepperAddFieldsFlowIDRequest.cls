/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * #### The request sent when fields are added to a document using a FlowID.
 */
public class OASDocPrepperAddFieldsFlowIDRequest implements OAS.MappedProperties {
    /**
     * Get docFieldTypeField
     * @return docFieldTypeField
     */
    public OASFieldType docFieldTypeField { get; set; }

    /**
     * Document ID.
     * @return docIDField
     */
    public Double docIDField { get; set; }

    /**
     * Document Flow ID.
     * @return flowIDField
     */
    public Double flowIDField { get; set; }

    /**
     * Field height.
     * @return heightField
     */
    public String heightField { get; set; }

    /**
     * Field width.
     * @return widthField
     */
    public String widthField { get; set; }

    /**
     * Is the field invisible.
     * @return isInvisibleField
     */
    public Boolean isInvisibleField { get; set; }

    /**
     * Document link.
     * @return linkToField
     */
    public String linkToField { get; set; }

    /**
     * Field page number.
     * @return pageNumberField
     */
    public Double pageNumberField { get; set; }

    /**
     * Field name field.
     * @return nameField
     */
    public String nameField { get; set; }

    /**
     * User email address field.
     * @return userEmailField
     */
    public String userEmailField { get; set; }

    /**
     * Document field x-coordinates.
     * @return xcoordinateField
     */
    public String xcoordinateField { get; set; }

    /**
     * Document field y-coordinates.
     * @return ycoordinateField
     */
    public String ycoordinateField { get; set; }

    /**
     * Get tokenField
     * @return tokenField
     */
    public OASTokenField tokenField { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocFieldTypeField' => 'docFieldTypeField',
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'HeightField' => 'heightField',
        'WidthField' => 'widthField',
        'IsInvisibleField' => 'isInvisibleField',
        'LinkToField' => 'linkToField',
        'PageNumberField' => 'pageNumberField',
        'NameField' => 'nameField',
        'UserEmailField' => 'userEmailField',
        'XCoordinateField' => 'xcoordinateField',
        'YCoordinateField' => 'ycoordinateField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASDocPrepperAddFieldsFlowIDRequest getExample() {
        OASDocPrepperAddFieldsFlowIDRequest docPrepperAddFieldsFlowIDRequest = new OASDocPrepperAddFieldsFlowIDRequest();
          docPrepperAddFieldsFlowIDRequest.docFieldTypeField = OASFieldType.getExample();
          docPrepperAddFieldsFlowIDRequest.docIDField = 12344;
          docPrepperAddFieldsFlowIDRequest.flowIDField = 11111;
          docPrepperAddFieldsFlowIDRequest.heightField = '25';
          docPrepperAddFieldsFlowIDRequest.widthField = '20';
          docPrepperAddFieldsFlowIDRequest.isInvisibleField = true;
          docPrepperAddFieldsFlowIDRequest.linkToField = '';
          docPrepperAddFieldsFlowIDRequest.pageNumberField = 2;
          docPrepperAddFieldsFlowIDRequest.nameField = '';
          docPrepperAddFieldsFlowIDRequest.userEmailField = 'email@domain.com';
          docPrepperAddFieldsFlowIDRequest.xcoordinateField = '50';
          docPrepperAddFieldsFlowIDRequest.ycoordinateField = '150';
          docPrepperAddFieldsFlowIDRequest.tokenField = OASTokenField.getExample();
        return docPrepperAddFieldsFlowIDRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASDocPrepperAddFieldsFlowIDRequest) {           
            OASDocPrepperAddFieldsFlowIDRequest docPrepperAddFieldsFlowIDRequest = (OASDocPrepperAddFieldsFlowIDRequest) obj;
            return this.docFieldTypeField == docPrepperAddFieldsFlowIDRequest.docFieldTypeField
                && this.docIDField == docPrepperAddFieldsFlowIDRequest.docIDField
                && this.flowIDField == docPrepperAddFieldsFlowIDRequest.flowIDField
                && this.heightField == docPrepperAddFieldsFlowIDRequest.heightField
                && this.widthField == docPrepperAddFieldsFlowIDRequest.widthField
                && this.isInvisibleField == docPrepperAddFieldsFlowIDRequest.isInvisibleField
                && this.linkToField == docPrepperAddFieldsFlowIDRequest.linkToField
                && this.pageNumberField == docPrepperAddFieldsFlowIDRequest.pageNumberField
                && this.nameField == docPrepperAddFieldsFlowIDRequest.nameField
                && this.userEmailField == docPrepperAddFieldsFlowIDRequest.userEmailField
                && this.xcoordinateField == docPrepperAddFieldsFlowIDRequest.xcoordinateField
                && this.ycoordinateField == docPrepperAddFieldsFlowIDRequest.ycoordinateField
                && this.tokenField == docPrepperAddFieldsFlowIDRequest.tokenField;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (docFieldTypeField == null ? 0 : System.hashCode(docFieldTypeField));
        hashCode = (17 * hashCode) + (docIDField == null ? 0 : System.hashCode(docIDField));
        hashCode = (17 * hashCode) + (flowIDField == null ? 0 : System.hashCode(flowIDField));
        hashCode = (17 * hashCode) + (heightField == null ? 0 : System.hashCode(heightField));
        hashCode = (17 * hashCode) + (widthField == null ? 0 : System.hashCode(widthField));
        hashCode = (17 * hashCode) + (isInvisibleField == null ? 0 : System.hashCode(isInvisibleField));
        hashCode = (17 * hashCode) + (linkToField == null ? 0 : System.hashCode(linkToField));
        hashCode = (17 * hashCode) + (pageNumberField == null ? 0 : System.hashCode(pageNumberField));
        hashCode = (17 * hashCode) + (nameField == null ? 0 : System.hashCode(nameField));
        hashCode = (17 * hashCode) + (userEmailField == null ? 0 : System.hashCode(userEmailField));
        hashCode = (17 * hashCode) + (xcoordinateField == null ? 0 : System.hashCode(xcoordinateField));
        hashCode = (17 * hashCode) + (ycoordinateField == null ? 0 : System.hashCode(ycoordinateField));
        hashCode = (17 * hashCode) + (tokenField == null ? 0 : System.hashCode(tokenField));
        return hashCode;
    }
}

