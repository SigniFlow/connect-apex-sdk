/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASSigningCeremonyApi {
    OASClient client;

    public OASSigningCeremonyApi(OASClient client) {
        this.client = client;
    }

    public OASSigningCeremonyApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Multiple Signers Signing Ceremony
     * #### Used when there are multiple signers on a document.
     * @param contentType  (required)
     * @param oaSMultipleSignersSigningCeremonyReq ##### Multiple Signers Signing Ceremony Request Model (optional)
     * @return OASMultipleSignersSigningCeremonyRes
     * @throws OAS.ApiException if fails to make API call
     */
    public OASMultipleSignersSigningCeremonyRes postMultipleSignersSigningCeremony(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASMultipleSignersSigningCeremonyRes) client.invoke(
            'POST', '/MultipleSignersSigningCeremony',
            (OASMultipleSignersSigningCeremonyReq) params.get('oaSMultipleSignersSigningCeremonyReq'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASMultipleSignersSigningCeremonyRes.class
        );
    }
    /**
     * Signing Ceremony V2
     * #### Used to initiate the signing process of a document.
     * @param contentType  (required)
     * @param oaSSigningCeremonyV2Request ##### Signing Ceremony V2 Request Model (optional)
     * @return OASSigningCeremonyV2Response
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSigningCeremonyV2Response postSigningCeremonyV2(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSigningCeremonyV2Response) client.invoke(
            'POST', '/SigningCeremonyV2',
            (OASSigningCeremonyV2Request) params.get('oaSSigningCeremonyV2Request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASSigningCeremonyV2Response.class
        );
    }
}
