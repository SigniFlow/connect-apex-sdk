/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * #### This is the response returned when a document url is requested.
 */
public class OASGetDocLinkResponse implements OAS.MappedProperties {
    /**
     * Displays the result of the call.
     * @return result
     */
    public String result { get; set; }

    /**
     * URL
     * @return url
     */
    public String url { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Result' => 'result',
        'Url' => 'url'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Result' => 'result',
        'Url' => 'url'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASGetDocLinkResponse getExample() {
        OASGetDocLinkResponse getDocLinkResponse = new OASGetDocLinkResponse();
          getDocLinkResponse.result = '';
          getDocLinkResponse.url = '';
        return getDocLinkResponse;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASGetDocLinkResponse) {           
            OASGetDocLinkResponse getDocLinkResponse = (OASGetDocLinkResponse) obj;
            return this.result == getDocLinkResponse.result
                && this.url == getDocLinkResponse.url;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (result == null ? 0 : System.hashCode(result));
        hashCode = (17 * hashCode) + (url == null ? 0 : System.hashCode(url));
        return hashCode;
    }
}

