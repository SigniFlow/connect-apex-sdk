/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASFullWorkflowRequestWorkflowUsersL
 */
public class OASFullWorkflowRequestWorkflowUsersL implements OAS.MappedProperties {
    /**
     * Refers to the order of signatures from the users.
     * @return actionField
     */
    public Double actionField { get; set; }

    /**
     * Allow proxy confirmation field.
     * @return allowProxyField
     */
    public Double allowProxyField { get; set; }

    /**
     * ### Enable auto sign.\n\n`True = Signature will be applied automaticly\nFalse = User will need to login and Sign`\n
     * @return autoSignField
     */
    public Boolean autoSignField { get; set; }

    /**
     * Workflow user\'s email addresses.
     * @return emailAddressField
     */
    public String emailAddressField { get; set; }

    /**
     * Get groupStepField
     * @return groupStepField
     */
    public OASFullWorkflowRequestGroupStepField groupStepField { get; set; }

    /**
     * #### Sets the display language for the user\n##### ISO 2 Digit Code\n\n`en = English\nes = Spanish\nfr = French`\n
     * @return languageCodeField
     */
    public String languageCodeField { get; set; }

    /**
     * Location latitude.
     * @return latitudeField
     */
    public String latitudeField { get; set; }

    /**
     * Location longtitude.
     * @return longitudeField
     */
    public String longitudeField { get; set; }

    /**
     * Group user\'s mobile number.
     * @return mobileNumberField
     */
    public String mobileNumberField { get; set; }

    /**
     * Preloaded user\'s who will be using the face to face signature field.
     * @return preloadedFaceToFaceSignersField
     */
    public Set<Object> preloadedFaceToFaceSignersField { get; set; }

    /**
     * Reason for signature.
     * @return signReasonField
     */
    public String signReasonField { get; set; }

    /**
     * Face to face user\'s password.
     * @return signerPasswordField
     */
    public String signerPasswordField { get; set; }

    /**
     * Face to face user\'s first name.
     * @return userFirstNameField
     */
    public String userFirstNameField { get; set; }

    /**
     * Face to face user\'s full name.
     * @return userFullNameField
     */
    public String userFullNameField { get; set; }

    /**
     * Face to face user\'s last name.
     * @return userLastNameField
     */
    public String userLastNameField { get; set; }

    /**
     * The list of the workflowed documents field.
     * @return workflowUserFieldsField
     */
    public Set<OASFullWorkflowRequestWorkflowUserFi> workflowUserFieldsField { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'ActionField' => 'actionField',
        'AllowProxyField' => 'allowProxyField',
        'AutoSignField' => 'autoSignField',
        'EmailAddressField' => 'emailAddressField',
        'GroupStepField' => 'groupStepField',
        'LanguageCodeField' => 'languageCodeField',
        'LatitudeField' => 'latitudeField',
        'LongitudeField' => 'longitudeField',
        'MobileNumberField' => 'mobileNumberField',
        'PreloadedFaceToFaceSignersField' => 'preloadedFaceToFaceSignersField',
        'SignReasonField' => 'signReasonField',
        'SignerPasswordField' => 'signerPasswordField',
        'UserFirstNameField' => 'userFirstNameField',
        'UserFullNameField' => 'userFullNameField',
        'UserLastNameField' => 'userLastNameField',
        'WorkflowUserFieldsField' => 'workflowUserFieldsField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASFullWorkflowRequestWorkflowUsersL() {
        preloadedFaceToFaceSignersField = new List<Object>();
        workflowUserFieldsField = new List<OASFullWorkflowRequestWorkflowUserFi>();
    }

    public static OASFullWorkflowRequestWorkflowUsersL getExample() {
        OASFullWorkflowRequestWorkflowUsersL fullWorkflowRequestWorkflowUsersListField = new OASFullWorkflowRequestWorkflowUsersL();
          fullWorkflowRequestWorkflowUsersListField.actionField = 1.3579;
          fullWorkflowRequestWorkflowUsersListField.allowProxyField = 1.3579;
          fullWorkflowRequestWorkflowUsersListField.autoSignField = true;
          fullWorkflowRequestWorkflowUsersListField.emailAddressField = 'email@domain.com';
          fullWorkflowRequestWorkflowUsersListField.groupStepField = OASFullWorkflowRequestGroupStepField.getExample();
          fullWorkflowRequestWorkflowUsersListField.languageCodeField = 'ENG';
          fullWorkflowRequestWorkflowUsersListField.latitudeField = '';
          fullWorkflowRequestWorkflowUsersListField.longitudeField = '';
          fullWorkflowRequestWorkflowUsersListField.mobileNumberField = '078 222 2222';
          fullWorkflowRequestWorkflowUsersListField.preloadedFaceToFaceSignersField = new Set<Object>{null};
          fullWorkflowRequestWorkflowUsersListField.signReasonField = 'Because yes';
          fullWorkflowRequestWorkflowUsersListField.signerPasswordField = 'P@ssw0rd';
          fullWorkflowRequestWorkflowUsersListField.userFirstNameField = 'John';
          fullWorkflowRequestWorkflowUsersListField.userFullNameField = 'John Smith';
          fullWorkflowRequestWorkflowUsersListField.userLastNameField = 'Smith';
          fullWorkflowRequestWorkflowUsersListField.workflowUserFieldsField = new Set<OASFullWorkflowRequestWorkflowUserFi>{OASFullWorkflowRequestWorkflowUserFi.getExample()};
        return fullWorkflowRequestWorkflowUsersListField;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASFullWorkflowRequestWorkflowUsersL) {           
            OASFullWorkflowRequestWorkflowUsersL fullWorkflowRequestWorkflowUsersListField = (OASFullWorkflowRequestWorkflowUsersL) obj;
            return this.actionField == fullWorkflowRequestWorkflowUsersListField.actionField
                && this.allowProxyField == fullWorkflowRequestWorkflowUsersListField.allowProxyField
                && this.autoSignField == fullWorkflowRequestWorkflowUsersListField.autoSignField
                && this.emailAddressField == fullWorkflowRequestWorkflowUsersListField.emailAddressField
                && this.groupStepField == fullWorkflowRequestWorkflowUsersListField.groupStepField
                && this.languageCodeField == fullWorkflowRequestWorkflowUsersListField.languageCodeField
                && this.latitudeField == fullWorkflowRequestWorkflowUsersListField.latitudeField
                && this.longitudeField == fullWorkflowRequestWorkflowUsersListField.longitudeField
                && this.mobileNumberField == fullWorkflowRequestWorkflowUsersListField.mobileNumberField
                && this.preloadedFaceToFaceSignersField == fullWorkflowRequestWorkflowUsersListField.preloadedFaceToFaceSignersField
                && this.signReasonField == fullWorkflowRequestWorkflowUsersListField.signReasonField
                && this.signerPasswordField == fullWorkflowRequestWorkflowUsersListField.signerPasswordField
                && this.userFirstNameField == fullWorkflowRequestWorkflowUsersListField.userFirstNameField
                && this.userFullNameField == fullWorkflowRequestWorkflowUsersListField.userFullNameField
                && this.userLastNameField == fullWorkflowRequestWorkflowUsersListField.userLastNameField
                && this.workflowUserFieldsField == fullWorkflowRequestWorkflowUsersListField.workflowUserFieldsField;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (actionField == null ? 0 : System.hashCode(actionField));
        hashCode = (17 * hashCode) + (allowProxyField == null ? 0 : System.hashCode(allowProxyField));
        hashCode = (17 * hashCode) + (autoSignField == null ? 0 : System.hashCode(autoSignField));
        hashCode = (17 * hashCode) + (emailAddressField == null ? 0 : System.hashCode(emailAddressField));
        hashCode = (17 * hashCode) + (groupStepField == null ? 0 : System.hashCode(groupStepField));
        hashCode = (17 * hashCode) + (languageCodeField == null ? 0 : System.hashCode(languageCodeField));
        hashCode = (17 * hashCode) + (latitudeField == null ? 0 : System.hashCode(latitudeField));
        hashCode = (17 * hashCode) + (longitudeField == null ? 0 : System.hashCode(longitudeField));
        hashCode = (17 * hashCode) + (mobileNumberField == null ? 0 : System.hashCode(mobileNumberField));
        hashCode = (17 * hashCode) + (preloadedFaceToFaceSignersField == null ? 0 : System.hashCode(preloadedFaceToFaceSignersField));
        hashCode = (17 * hashCode) + (signReasonField == null ? 0 : System.hashCode(signReasonField));
        hashCode = (17 * hashCode) + (signerPasswordField == null ? 0 : System.hashCode(signerPasswordField));
        hashCode = (17 * hashCode) + (userFirstNameField == null ? 0 : System.hashCode(userFirstNameField));
        hashCode = (17 * hashCode) + (userFullNameField == null ? 0 : System.hashCode(userFullNameField));
        hashCode = (17 * hashCode) + (userLastNameField == null ? 0 : System.hashCode(userLastNameField));
        hashCode = (17 * hashCode) + (workflowUserFieldsField == null ? 0 : System.hashCode(workflowUserFieldsField));
        return hashCode;
    }
}

