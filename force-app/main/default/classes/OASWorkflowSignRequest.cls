/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * #### This request is sent when a document workflow needs to be signed.
 */
public class OASWorkflowSignRequest implements OAS.MappedProperties {
    /**
     * Get docIDField
     * @return docIDField
     */
    public String docIDField { get; set; }

    /**
     * Get latitudeField
     * @return latitudeField
     */
    public String latitudeField { get; set; }

    /**
     * Get loginPasswordField
     * @return loginPasswordField
     */
    public String loginPasswordField { get; set; }

    /**
     * Get loginUserNameField
     * @return loginUserNameField
     */
    public String loginUserNameField { get; set; }

    /**
     * Get longitudeField
     * @return longitudeField
     */
    public String longitudeField { get; set; }

    /**
     * Get signReasonField
     * @return signReasonField
     */
    public String signReasonField { get; set; }

    /**
     * Get timeZoneOffsetField
     * @return timeZoneOffsetField
     */
    public Double timeZoneOffsetField { get; set; }

    /**
     * Get tokenField
     * @return tokenField
     */
    public OASTokenField tokenField { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'LatitudeField' => 'latitudeField',
        'LoginPasswordField' => 'loginPasswordField',
        'LoginUserNameField' => 'loginUserNameField',
        'LongitudeField' => 'longitudeField',
        'SignReasonField' => 'signReasonField',
        'TimeZoneOffsetField' => 'timeZoneOffsetField',
        'TokenField' => 'tokenField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASWorkflowSignRequest getExample() {
        OASWorkflowSignRequest workflowSignRequest = new OASWorkflowSignRequest();
          workflowSignRequest.docIDField = '';
          workflowSignRequest.latitudeField = '';
          workflowSignRequest.loginPasswordField = 'password123';
          workflowSignRequest.loginUserNameField = 'email@domain.com';
          workflowSignRequest.longitudeField = '';
          workflowSignRequest.signReasonField = '';
          workflowSignRequest.timeZoneOffsetField = 1.3579;
          workflowSignRequest.tokenField = OASTokenField.getExample();
        return workflowSignRequest;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASWorkflowSignRequest) {           
            OASWorkflowSignRequest workflowSignRequest = (OASWorkflowSignRequest) obj;
            return this.docIDField == workflowSignRequest.docIDField
                && this.latitudeField == workflowSignRequest.latitudeField
                && this.loginPasswordField == workflowSignRequest.loginPasswordField
                && this.loginUserNameField == workflowSignRequest.loginUserNameField
                && this.longitudeField == workflowSignRequest.longitudeField
                && this.signReasonField == workflowSignRequest.signReasonField
                && this.timeZoneOffsetField == workflowSignRequest.timeZoneOffsetField
                && this.tokenField == workflowSignRequest.tokenField;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (docIDField == null ? 0 : System.hashCode(docIDField));
        hashCode = (17 * hashCode) + (latitudeField == null ? 0 : System.hashCode(latitudeField));
        hashCode = (17 * hashCode) + (loginPasswordField == null ? 0 : System.hashCode(loginPasswordField));
        hashCode = (17 * hashCode) + (loginUserNameField == null ? 0 : System.hashCode(loginUserNameField));
        hashCode = (17 * hashCode) + (longitudeField == null ? 0 : System.hashCode(longitudeField));
        hashCode = (17 * hashCode) + (signReasonField == null ? 0 : System.hashCode(signReasonField));
        hashCode = (17 * hashCode) + (timeZoneOffsetField == null ? 0 : System.hashCode(timeZoneOffsetField));
        hashCode = (17 * hashCode) + (tokenField == null ? 0 : System.hashCode(tokenField));
        return hashCode;
    }
}

