/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * #### Add a step to a Workflow response.
 */
public class OASAddWokflowStepV2Response implements OAS.MappedProperties {
    /**
     * Document ID field.
     * @return docIDField
     */
    public Double docIDField { get; set; }

    /**
     * Document flow ID field
     * @return flowIDField
     */
    public Double flowIDField { get; set; }

    /**
     * Get flowStepsField
     * @return flowStepsField
     */
    public Set<OASAddWokflowStepV2ResponseFlowSteps> flowStepsField { get; set; }

    /**
     * Displays the result of the call.
     * @return resultField
     */
    public String resultField { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'FlowStepsField' => 'flowStepsField',
        'ResultField' => 'resultField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'FlowStepsField' => 'flowStepsField',
        'ResultField' => 'resultField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'FlowStepsField' => 'flowStepsField',
        'ResultField' => 'resultField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'DocIDField' => 'docIDField',
        'FlowIDField' => 'flowIDField',
        'FlowStepsField' => 'flowStepsField',
        'ResultField' => 'resultField'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASAddWokflowStepV2Response() {
        flowStepsField = new List<OASAddWokflowStepV2ResponseFlowSteps>();
    }

    public static OASAddWokflowStepV2Response getExample() {
        OASAddWokflowStepV2Response addWokflowStepV2Response = new OASAddWokflowStepV2Response();
          addWokflowStepV2Response.docIDField = 2147483647;
          addWokflowStepV2Response.flowIDField = 1111112;
          addWokflowStepV2Response.flowStepsField = new Set<OASAddWokflowStepV2ResponseFlowSteps>{OASAddWokflowStepV2ResponseFlowSteps.getExample()};
          addWokflowStepV2Response.resultField = 'success';
        return addWokflowStepV2Response;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASAddWokflowStepV2Response) {           
            OASAddWokflowStepV2Response addWokflowStepV2Response = (OASAddWokflowStepV2Response) obj;
            return this.docIDField == addWokflowStepV2Response.docIDField
                && this.flowIDField == addWokflowStepV2Response.flowIDField
                && this.flowStepsField == addWokflowStepV2Response.flowStepsField
                && this.resultField == addWokflowStepV2Response.resultField;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (docIDField == null ? 0 : System.hashCode(docIDField));
        hashCode = (17 * hashCode) + (flowIDField == null ? 0 : System.hashCode(flowIDField));
        hashCode = (17 * hashCode) + (flowStepsField == null ? 0 : System.hashCode(flowStepsField));
        hashCode = (17 * hashCode) + (resultField == null ? 0 : System.hashCode(resultField));
        return hashCode;
    }
}

