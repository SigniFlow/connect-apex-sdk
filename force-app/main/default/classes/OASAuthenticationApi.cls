/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASAuthenticationApi {
    OASClient client;

    public OASAuthenticationApi(OASClient client) {
        this.client = client;
    }

    public OASAuthenticationApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Login
     * #### Generates a API Token for the User
     * @param contentType  (required)
     * @param oaSLoginRequest ##### Login Request Model (required)
     * @return OASLoginResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASLoginResponse login(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        client.assertNotNull(params.get('oaSLoginRequest'), 'oaSLoginRequest');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASLoginResponse) client.invoke(
            'POST', '/Login',
            (OASLoginRequest) params.get('oaSLoginRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASLoginResponse.class
        );
    }
    /**
     * Logout
     * #### Used to log out a user from SigniFlow.
     * @param contentType  (required)
     * @param oaSLogoutRequest ##### Logout Request Model (optional)
     * @return OASLogoutResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASLogoutResponse postLogout(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASLogoutResponse) client.invoke(
            'POST', '/Logout',
            (OASLogoutRequest) params.get('oaSLogoutRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASLogoutResponse.class
        );
    }
    /**
     * Token Extend
     * #### Used to extend the period of time in which the session token is valid.
     * @param contentType  (required)
     * @param oaSTokenExtendRequest ##### Token Extend Request Model (optional)
     * @return OASTokenExtendResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASTokenExtendResponse postTokenExtend(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASTokenExtendResponse) client.invoke(
            'POST', '/TokenExtend',
            (OASTokenExtendRequest) params.get('oaSTokenExtendRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASTokenExtendResponse.class
        );
    }
    /**
     * Token Validate
     * #### Used to validate the user\&#39;s session token.
     * @param contentType  (required)
     * @param oaSTokenValidateRequest ##### Token Validate Request Model (optional)
     * @return OASTokenValidateResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASTokenValidateResponse postTokenValidate(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASTokenValidateResponse) client.invoke(
            'POST', '/TokenValidate',
            (OASTokenValidateRequest) params.get('oaSTokenValidateRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASTokenValidateResponse.class
        );
    }
}
