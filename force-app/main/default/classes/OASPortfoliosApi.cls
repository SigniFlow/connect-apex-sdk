/*
 * SigniFlow OpenAPI Spec v1
 * ## SigniFlow API used to automate esignature workflow creation and management.\n
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@signiflow.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASPortfoliosApi {
    OASClient client;

    public OASPortfoliosApi(OASClient client) {
        this.client = client;
    }

    public OASPortfoliosApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Create Portfolio
     * #### Used to create a portfolio to group documents.
     * @param contentType  (required)
     * @param oaSCreatePortfolioRequest ##### Create Portfolio Request Model (optional)
     * @return OASCreatePortfolioResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASCreatePortfolioResponse postCreatePortfolio(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASCreatePortfolioResponse) client.invoke(
            'POST', '/CreatePortfolio',
            (OASCreatePortfolioRequest) params.get('oaSCreatePortfolioRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASCreatePortfolioResponse.class
        );
    }
    /**
     * Download Portfolio
     * #### Used to return a string that is then used to download a portfolio.
     * @param contentType  (required)
     * @param oaSDownloadPortfolioRequest ##### Download Portfolio Request Model (optional)
     * @return OASDownloadPortfolioResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASDownloadPortfolioResponse postDownloadPortfolio(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASDownloadPortfolioResponse) client.invoke(
            'POST', '/DownloadPortfolio',
            (OASDownloadPortfolioRequest) params.get('oaSDownloadPortfolioRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASDownloadPortfolioResponse.class
        );
    }
    /**
     * Link To Portfolio
     * #### Used to get the url link to a portfolio.
     * @param contentType  (required)
     * @param oaSLinkToPortfolioRequest ##### Link To Portfolio Request Model (optional)
     * @return OASLinkToPortfolioResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASLinkToPortfolioResponse postLinkToPortfolio(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASLinkToPortfolioResponse) client.invoke(
            'POST', '/LinkToPortfolio',
            (OASLinkToPortfolioRequest) params.get('oaSLinkToPortfolioRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASLinkToPortfolioResponse.class
        );
    }
    /**
     * Set Document Order
     * #### Used to set the order of documents that needs to be signed.
     * @param contentType  (required)
     * @param oaSSetDocumentOrderRequest ##### Set Document Order Request Model (optional)
     * @return OASSetDocumentOrderResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSetDocumentOrderResponse postSetDocumentOrder(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSetDocumentOrderResponse) client.invoke(
            'POST', '/SetDocumentOrder',
            (OASSetDocumentOrderRequest) params.get('oaSSetDocumentOrderRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASSetDocumentOrderResponse.class
        );
    }
    /**
     * Share Portfolio
     * #### Used when a user wants to share a portfolio with someone else.
     * @param contentType  (required)
     * @param oaSSharePortfolioRequest ##### Share Portfolio Request Model (optional)
     * @return OASSharePortfolioResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSharePortfolioResponse postSharePortfolio(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSharePortfolioResponse) client.invoke(
            'POST', '/SharePortfolio',
            (OASSharePortfolioRequest) params.get('oaSSharePortfolioRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASSharePortfolioResponse.class
        );
    }
    /**
     * Share Portfolio No Email
     * #### Used when a user wants to share a portfolio without sending out an email.
     * @param contentType  (required)
     * @param oaSSharePortfolioNoEmailRequest ##### Share Portfolio No Email Request Model (optional)
     * @return OASSharePortfolioNoEmailResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASSharePortfolioNoEmailResponse postSharePortfolioNoEmail(Map<String, Object> params) {
        client.assertNotNull(params.get('contentType'), 'contentType');
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASSharePortfolioNoEmailResponse) client.invoke(
            'POST', '/SharePortfolio_No_Email',
            (OASSharePortfolioNoEmailRequest) params.get('oaSSharePortfolioNoEmailRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASSharePortfolioNoEmailResponse.class
        );
    }
}
